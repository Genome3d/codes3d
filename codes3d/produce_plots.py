from configobj import ConfigObj
from sets import Set
import argparse,codes3d,os

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description="")
	parser.add_argument("-s","--snps_file",required=True,help="The list of SNPs generated by process_inputs.py")
	parser.add_argument("-e","--eqtl_file",help="The list of eQTLs generated by find_eqtls.py")
	parser.add_argument("-x","--gene_exp_file",help="The gene expression summary generated by get_gene_expression_info.py")
	parser.add_argument("-g","--genes_file",required=True,help="The list of genes generated by find_genes.py")
	parser.add_argument("-o","--output_dir",default="hiCquery_output",help="The directory in which to output results (\"hiCquery_output\" by default).")
	parser.add_argument("-S","--num_sig_file",help="The table of significant eQTLs per SNP generated by find_eqtls.py")
	args = parser.parse_args()
	snps = codes3d.parse_snps_file(args.snps_file)
	genes = codes3d.parse_genes_file(args.genes_file)
	eqtls = codes3d.parse_eqtls_file(args.eqtl_file)
	num_sig = codes3d.parse_number_significant_eqtls_per_snp_file(args.num_sig_file)
	if not os.path.isdir(args.output_dir):
		os.makedirs(args.output_dir)
	
	codes3d.produce_plots(snps,genes,eqtls,num_sig,args.output_dir)
