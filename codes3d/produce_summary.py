#!/usr/bin/env python

import argparse
import codes3d
import configparser
import os
import sys
import psutil

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="")
    parser.add_argument(
            "-e","--eqtls_files",nargs='+',required=True,
            help="Space-separated list of one or more eQTL files "+\
            "generated by find_eqtls.py")
    parser.add_argument(
            "-o","--output_dir",default="codes3d_summary",
            help="The directory in which to output results "+\
            "(\"codes3d_output\" by default).")
    parser.add_argument(
            "-c","--config",
        default=os.path.join(os.path.dirname(__file__),
                             "../docs/codes3d.conf"),
            help="The configuration file to be used in this "+\
            "instance (default: conf.py)")
    parser.add_argument(
            "-f","--fdr_threshold",type=float,default=0.05,
            help="The FDR threshold to consider an eQTL statistically "+\
            "significant (default: 0.05).")
    parser.add_argument(
            "-d", "--do_not_produce_summary", action="store_true",default=False,
            help="Do not produce summary files, stop process after " +\
            "querying GTEx (default: False).")
    parser.add_argument(
            "-b","--buffer_size_in",type=int,default=1048576,
            help="Buffer size applied to file input during compilation "+\
            " (default: 1048576).")
    parser.add_argument(
            "-z","--buffer_size_out",type=int,default=1048576,
            help="Buffer size applied to file output during compilation "+\
            " (default: 1048576).")
    parser.add_argument(
            "-t", "--num_processes_summary", type=int,
            default=min(psutil.cpu_count(), 32),
            help="The number of processes for compilation of the results " +\
            "(default: %s)." % str(min(psutil.cpu_count(), 32)))
    args = parser.parse_args()
    config = configparser.ConfigParser()
    config.read(args.config)
    expression_table_fp = os.path.join(
            os.path.dirname(__file__),
            config.get("Defaults","EXPRESSION_TABLE_FP"))
    gene_database_fp = os.path.join(
            os.path.dirname(__file__),
            config.get("Defaults","GENE_DATABASE_FP"))
    snp_database_fp = os.path.join(
            os.path.dirname(__file__),
            config.get("Defaults","SNP_DATABASE_FP"))
    lib_fp = os.path.join(
            os.path.dirname(__file__),
            config.get("Defaults","LIB_DIR"))
    restriction_enzymes = config.get("Defaults", "HIC_RESTRICTION_ENZYMES")
    if not os.path.isdir(args.output_dir):
	print('Creating output directory..')
	os.mkdir(args.output_dir)
    p_values, snps, genes = codes3d.parse_eqtls_files(
        args.eqtls_files, snp_database_fp, gene_database_fp,
        restriction_enzymes, lib_fp, args.output_dir, args.buffer_size_in, args.fdr_threshold)
    codes3d.produce_summary(
        p_values, snps, genes, gene_database_fp, expression_table_fp,
        args.fdr_threshold, args.do_not_produce_summary, args.output_dir, args.buffer_size_in,
        args.buffer_size_out, args.num_processes_summary)
